// foodflows.h

#ifndef FOODFLOWS_H
#define FOODFLOWS_H
static const uint16_t NUM_WORDS = 60;

class Predictor {
  static const uint16_t MAX_WORD_LEN = 20; // max characters in a word
  uint16_t STATE_SUGGESTIONS = 0; // position of sugset num in state array
  uint16_t STATE_NUM_DESCS = 1;   // position of sugset num in state array
  uint16_t STATE_1ST_DESC = 2;    // position of 1st descendant in state array

  uint16_t state = 0;         // array index of current state (0 is root)
  char history[MAX_WORD_LEN]; // symbols consumed so far
  uint16_t histlen = 0;       // number of symbols in history
  uint16_t sugiter = 1;       // array index for suggestion set iterator
public:
  Predictor();
  void print();
  void reset();
  int16_t suggest(uint8_t symbolSeen);
  const char *next();
  const char *first();
  uint16_t getState();
};

static const char *words[] = {  // in order of frequency
  "the",               //    0
  "of",                //    1
  "to",                //    2
  "a",                 //    3
  "and",               //    4
  "in",                //    5
};

static const uint16_t NUM_SUGGS = 79;
static const uint16_t suggestionSets[][NUM_SUGGS] = {
//arity wordnum(s)...                     index: symseq(s)...
  { 10,  3, 4, 13, 14, 15, 16, 20, 22, 26, 28, }, //    0: 2
  {  1,  4, },                          //    1: 263
  {  2,  4, 35, },                      //    2: 26
  {  1,  28, },                         //    3: 277 2775 27753 277537
  {  1,  20, },                         //    4: 273
  {  7,  13, 20, 26, 28, 30, 31, 32, }, //    5: 27
  {  3,  15, 22, 36, },                 //    6: 28
  {  2,  14, 29, },                     //    7: 23
  {  1,  29, },                         //    8: 233 2338 23387 233876 2338766 23387668
  {  1,  30, },                         //    9: 27623 276231 2762312 27623123 276231232 2762312326 27623123267
  {  2,  30, 31, },                     //   10: 2762
  {  1,  31, },                         //   11: 27622 276226 2762265 27622654
  {  1,  32, },                         //   12: 278 2787 27877 278773 2787735 27877351 278773517 2787735177 27877351777 278773517776 2787735177768 27877351777688 278773517776887
  {  1,  22, },                         //   13: 288
  {  1,  16, },                         //   14: 29
  {  1,  33, },                         //   15: 222 2222 22222 222224 2222243
  {  2,  33, 34, },                     //   16: 22
  {  1,  34, },                         //   17: 227 2277 22776 227768 2277687
  {  1,  38, },                         //   18: 25 254 2546 25462 254624 2546246 25462464 254624641 2546246412 25462464123 254624641232 2546246412326 25462464123267
  {  1,  35, },                         //   19: 268 2687 26874 268743 2687438 26874388 268743883 2687438837
  {  1,  26, },                         //   20: 2767
  {  3,  26, 30, 31, },                 //   21: 276
  {  1,  36, },                         //   22: 287 2877 28772 287726 2877268 28772687
  {  1,  8, },                          //   23: 36 367
  {  3,  8, 21, 37, },                  //   24: 3
  {  1,  37, },                         //   25: 373 3736 37362 373624 3736241 37362412 373624123 3736241232 37362412326 373624123267
  {  1,  21, },                         //   26: 376 3766
  {  2,  21, 37, },                     //   27: 37
  {  1,  39, },                         //   28: 466 4667 46673 466732 4667323 46673237 466732377 4667323774 46673237743 466732377437
  {  1,  27, },                         //   29: 427 4278 42783 427837 4278378
  {  1,  23, },                         //   30: 428 4283
  {  2,  23, 27, },                     //   31: 42
  {  1,  17, },                         //   32: 43
  {  8,  18, 5, 6, 9, 17, 23, 27, 39, }, //   33: 4
  {  2,  5, 39, },                      //   34: 46
  {  1,  6, },                          //   35: 47
  {  1,  9, },                          //   36: 48
  {  1,  40, },                         //   37: 533 5335 53357
  {  2,  40, 41, },                     //   38: 5 53
  {  1,  41, },                         //   39: 538 5388 53888 538882 5388823
  {  1,  1, },                          //   40: 63
  {  5,  1, 10, 25, 42, 43, },          //   41: 6
  {  2,  10, 42, },                     //   42: 66
  {  1,  42, },                         //   43: 664 6646 66466 664667
  {  1,  25, },                         //   44: 67
  {  1,  43, },                         //   45: 68 684 6843 68437
  {  1,  44, },                         //   46: 72776 727764 7277647 72776477
  {  2,  44, 48, },                     //   47: 727 7277
  {  1,  45, },                         //   48: 73 732 7327
  {  1,  46, },                         //   49: 75 758 7586 75867
  {  1,  47, },                         //   50: 76 768 7682 76828 768286 7682863 76828637
  {  1,  51, },                         //   51: 7867 78675 786754 7867546 78675467
  {  1,  48, },                         //   52: 72772 727723 7277237 72772377 727723774 7277237743 72772377437
  {  1,  49, },                         //   53: 7866 78663 786637 7866371 78663712 786637123 7866371232 78663712326 786637123267
  {  2,  49, 51, },                     //   54: 786
  {  3,  49, 51, 52, },                 //   55: 78
  {  1,  19, },                         //   56: 724 7243
  { 10,  19, 44, 45, 46, 47, 48, 49, 50, 51, 52, }, //   57: 7
  {  4,  19, 44, 48, 58, },             //   58: 72
  {  1,  58, },                         //   59: 725 7252 72523 725231 7252315 72523153 725231532 7252315328 72523153283 725231532837
  {  1,  50, },                         //   60: 77 778 7782 77827 778274
  {  1,  52, },                         //   61: 787 7872 78729 787292 7872923 78729237 787292377 7872923774 78729237743 787292377437
  {  1,  59, },                         //   62: 79333 793337
  {  1,  53, },                         //   63: 79338 793382 7933826 79338267 793382676
  {  2,  53, 59, },                     //   64: 79 793 7933
  {  1,  7, },                          //   65: 842 8428
  {  1,  0, },                          //   66: 843
  {  2,  0, 7, },                       //   67: 84
  {  7,  0, 2, 7, 54, 55, 56, 57, },    //   68: 8
  {  2,  2, 54, },                      //   69: 86
  {  1,  54, },                         //   70: 866 8662 86628 866286 8662863 86628637
  {  1,  55, },                         //   71: 872463312 8724633127 87246331277 872463312775 8724633127753 87246331277537
  {  2,  55, 56, },                     //   72: 87 872 8724 87246 872463 8724633 87246331
  {  1,  56, },                         //   73: 872463317 8724633175 87246331758 872463317586 8724633175867
  {  1,  57, },                         //   74: 88 887 8876 88764 887647 8876477
  {  1,  12, },                         //   75: 92 927
  {  1,  11, },                         //   76: 94 948 9484
  {  3,  11, 12, 24, },                 //   77: 9
  {  1,  24, },                         //   78: 96 968
};

/*
candidates:
[['2', ['a', 'and', 'as', 'be', 'at', 'by', 'are', 'but', 'crop', 'apples']],
 ['22', ['cabbage', 'carrots']],
 ['222', ['cabbage']],
 ['2222', ['cabbage']],
 ['22222', ['cabbage']],
 ['222224', ['cabbage']],
 ['2222243', ['cabbage']],
 ['227', ['carrots']],
 ['2277', ['carrots']],
 ['22776', ['carrots']],
 ['227768', ['carrots']],
 ['2277687', ['carrots']],
 ['23', ['be', 'beetroot']],
 ['233', ['beetroot']],
 ['2338', ['beetroot']],
 ['23387', ['beetroot']],
 ['233876', ['beetroot']],
 ['2338766', ['beetroot']],
 ['23387668', ['beetroot']],
 ['25', ['climbing beans']],
 ['254', ['climbing beans']],
 ['2546', ['climbing beans']],
 ['25462', ['climbing beans']],
 ['254624', ['climbing beans']],
 ['2546246', ['climbing beans']],
 ['25462464', ['climbing beans']],
 ['254624641', ['climbing beans']],
 ['2546246412', ['climbing beans']],
 ['25462464123', ['climbing beans']],
 ['254624641232', ['climbing beans']],
 ['2546246412326', ['climbing beans']],
 ['25462464123267', ['climbing beans']],
 ['26', ['and', 'courgettes']],
 ['263', ['and']],
 ['268', ['courgettes']],
 ['2687', ['courgettes']],
 ['26874', ['courgettes']],
 ['268743', ['courgettes']],
 ['2687438', ['courgettes']],
 ['26874388', ['courgettes']],
 ['268743883', ['courgettes']],
 ['2687438837', ['courgettes']],
 ['27',
  ['as',
   'are',
   'crop',
   'apples',
   'broad beans',
   'broccoli',
   'brussel sprouts']],
 ['273', ['are']],
 ['276', ['crop', 'broad beans', 'broccoli']],
 ['2762', ['broad beans', 'broccoli']],
 ['27622', ['broccoli']],
 ['276226', ['broccoli']],
 ['2762265', ['broccoli']],
 ['27622654', ['broccoli']],
 ['27623', ['broad beans']],
 ['276231', ['broad beans']],
 ['2762312', ['broad beans']],
 ['27623123', ['broad beans']],
 ['276231232', ['broad beans']],
 ['2762312326', ['broad beans']],
 ['27623123267', ['broad beans']],
 ['2767', ['crop']],
 ['277', ['apples']],
 ['2775', ['apples']],
 ['27753', ['apples']],
 ['277537', ['apples']],
 ['278', ['brussel sprouts']],
 ['2787', ['brussel sprouts']],
 ['27877', ['brussel sprouts']],
 ['278773', ['brussel sprouts']],
 ['2787735', ['brussel sprouts']],
 ['27877351', ['brussel sprouts']],
 ['278773517', ['brussel sprouts']],
 ['2787735177', ['brussel sprouts']],
 ['27877351777', ['brussel sprouts']],
 ['278773517776', ['brussel sprouts']],
 ['2787735177768', ['brussel sprouts']],
 ['27877351777688', ['brussel sprouts']],
 ['278773517776887', ['brussel sprouts']],
 ['28', ['at', 'but', 'currants']],
 ['287', ['currants']],
 ['2877', ['currants']],
 ['28772', ['currants']],
 ['287726', ['currants']],
 ['2877268', ['currants']],
 ['28772687', ['currants']],
 ['288', ['but']],
 ['29', ['by']],
 ['3', ['for', 'from', 'french beans']],
 ['36', ['for']],
 ['367', ['for']],
 ['37', ['from', 'french beans']],
 ['373', ['french beans']],
 ['3736', ['french beans']],
 ['37362', ['french beans']],
 ['373624', ['french beans']],
 ['3736241', ['french beans']],
 ['37362412', ['french beans']],
 ['373624123', ['french beans']],
 ['3736241232', ['french beans']],
 ['37362412326', ['french beans']],
 ['373624123267', ['french beans']],
 ['376', ['from']],
 ['3766', ['from']],
 ['4', ['i', 'in', 'is', 'it', 'he', 'have', 'harvest', 'gooseberries']],
 ['42', ['have', 'harvest']],
 ['427', ['harvest']],
 ['4278', ['harvest']],
 ['42783', ['harvest']],
 ['427837', ['harvest']],
 ['4278378', ['harvest']],
 ['428', ['have']],
 ['4283', ['have']],
 ['43', ['he']],
 ['46', ['in', 'gooseberries']],
 ['466', ['gooseberries']],
 ['4667', ['gooseberries']],
 ['46673', ['gooseberries']],
 ['466732', ['gooseberries']],
 ['4667323', ['gooseberries']],
 ['46673237', ['gooseberries']],
 ['466732377', ['gooseberries']],
 ['4667323774', ['gooseberries']],
 ['46673237743', ['gooseberries']],
 ['466732377437', ['gooseberries']],
 ['47', ['is']],
 ['48', ['it']],
 ['5', ['leeks', 'lettuce']],
 ['53', ['leeks', 'lettuce']],
 ['533', ['leeks']],
 ['5335', ['leeks']],
 ['53357', ['leeks']],
 ['538', ['lettuce']],
 ['5388', ['lettuce']],
 ['53888', ['lettuce']],
 ['538882', ['lettuce']],
 ['5388823', ['lettuce']],
 ['6', ['of', 'on', 'or', 'onions', 'other']],
 ['63', ['of']],
 ['66', ['on', 'onions']],
 ['664', ['onions']],
 ['6646', ['onions']],
 ['66466', ['onions']],
 ['664667', ['onions']],
 ['67', ['or']],
 ['68', ['other']],
 ['684', ['other']],
 ['6843', ['other']],
 ['68437', ['other']],
 ['7',
  ['said',
   'parsnips',
   'peas',
   'plums',
   'potatoes',
   'raspberries',
   'runner beans',
   'squash',
   'pumpkins',
   'strawberries']],
 ['72', ['said', 'parsnips', 'raspberries', 'salad leaves']],
 ['724', ['said']],
 ['7243', ['said']],
 ['725', ['salad leaves']],
 ['7252', ['salad leaves']],
 ['72523', ['salad leaves']],
 ['725231', ['salad leaves']],
 ['7252315', ['salad leaves']],
 ['72523153', ['salad leaves']],
 ['725231532', ['salad leaves']],
 ['7252315328', ['salad leaves']],
 ['72523153283', ['salad leaves']],
 ['725231532837', ['salad leaves']],
 ['727', ['parsnips', 'raspberries']],
 ['7277', ['parsnips', 'raspberries']],
 ['72772', ['raspberries']],
 ['727723', ['raspberries']],
 ['7277237', ['raspberries']],
 ['72772377', ['raspberries']],
 ['727723774', ['raspberries']],
 ['7277237743', ['raspberries']],
 ['72772377437', ['raspberries']],
 ['72776', ['parsnips']],
 ['727764', ['parsnips']],
 ['7277647', ['parsnips']],
 ['72776477', ['parsnips']],
 ['73', ['peas']],
 ['732', ['peas']],
 ['7327', ['peas']],
 ['75', ['plums']],
 ['758', ['plums']],
 ['7586', ['plums']],
 ['75867', ['plums']],
 ['76', ['potatoes']],
 ['768', ['potatoes']],
 ['7682', ['potatoes']],
 ['76828', ['potatoes']],
 ['768286', ['potatoes']],
 ['7682863', ['potatoes']],
 ['76828637', ['potatoes']],
 ['77', ['squash']],
 ['778', ['squash']],
 ['7782', ['squash']],
 ['77827', ['squash']],
 ['778274', ['squash']],
 ['78', ['runner beans', 'pumpkins', 'strawberries']],
 ['786', ['runner beans', 'pumpkins']],
 ['7866', ['runner beans']],
 ['78663', ['runner beans']],
 ['786637', ['runner beans']],
 ['7866371', ['runner beans']],
 ['78663712', ['runner beans']],
 ['786637123', ['runner beans']],
 ['7866371232', ['runner beans']],
 ['78663712326', ['runner beans']],
 ['786637123267', ['runner beans']],
 ['7867', ['pumpkins']],
 ['78675', ['pumpkins']],
 ['786754', ['pumpkins']],
 ['7867546', ['pumpkins']],
 ['78675467', ['pumpkins']],
 ['787', ['strawberries']],
 ['7872', ['strawberries']],
 ['78729', ['strawberries']],
 ['787292', ['strawberries']],
 ['7872923', ['strawberries']],
 ['78729237', ['strawberries']],
 ['787292377', ['strawberries']],
 ['7872923774', ['strawberries']],
 ['78729237743', ['strawberries']],
 ['787292377437', ['strawberries']],
 ['79', ['sweetcorn', 'swedes']],
 ['793', ['sweetcorn', 'swedes']],
 ['7933', ['sweetcorn', 'swedes']],
 ['79333', ['swedes']],
 ['793337', ['swedes']],
 ['79338', ['sweetcorn']],
 ['793382', ['sweetcorn']],
 ['7933826', ['sweetcorn']],
 ['79338267', ['sweetcorn']],
 ['793382676', ['sweetcorn']],
 ['8',
  ['the',
   'to',
   'that',
   'tomatoes',
   'trained apples',
   'trained plums',
   'turnips']],
 ['84', ['the', 'that']],
 ['842', ['that']],
 ['8428', ['that']],
 ['843', ['the']],
 ['86', ['to', 'tomatoes']],
 ['866', ['tomatoes']],
 ['8662', ['tomatoes']],
 ['86628', ['tomatoes']],
 ['866286', ['tomatoes']],
 ['8662863', ['tomatoes']],
 ['86628637', ['tomatoes']],
 ['87', ['trained apples', 'trained plums']],
 ['872', ['trained apples', 'trained plums']],
 ['8724', ['trained apples', 'trained plums']],
 ['87246', ['trained apples', 'trained plums']],
 ['872463', ['trained apples', 'trained plums']],
 ['8724633', ['trained apples', 'trained plums']],
 ['87246331', ['trained apples', 'trained plums']],
 ['872463312', ['trained apples']],
 ['8724633127', ['trained apples']],
 ['87246331277', ['trained apples']],
 ['872463312775', ['trained apples']],
 ['8724633127753', ['trained apples']],
 ['87246331277537', ['trained apples']],
 ['872463317', ['trained plums']],
 ['8724633175', ['trained plums']],
 ['87246331758', ['trained plums']],
 ['872463317586', ['trained plums']],
 ['8724633175867', ['trained plums']],
 ['88', ['turnips']],
 ['887', ['turnips']],
 ['8876', ['turnips']],
 ['88764', ['turnips']],
 ['887647', ['turnips']],
 ['8876477', ['turnips']],
 ['9', ['with', 'was', 'you']],
 ['92', ['was']],
 ['927', ['was']],
 ['94', ['with']],
 ['948', ['with']],
 ['9484', ['with']],
 ['96', ['you']],
 ['968', ['you']]]

input sym sequences to suggestion sets:
2 	 0
22 	 16
222 	 15
2222 	 15
22222 	 15
222224 	 15
2222243 	 15
227 	 17
2277 	 17
22776 	 17
227768 	 17
2277687 	 17
23 	 7
233 	 8
2338 	 8
23387 	 8
233876 	 8
2338766 	 8
23387668 	 8
25 	 18
254 	 18
2546 	 18
25462 	 18
254624 	 18
2546246 	 18
25462464 	 18
254624641 	 18
2546246412 	 18
25462464123 	 18
254624641232 	 18
2546246412326 	 18
25462464123267 	 18
26 	 2
263 	 1
268 	 19
2687 	 19
26874 	 19
268743 	 19
2687438 	 19
26874388 	 19
268743883 	 19
2687438837 	 19
27 	 5
273 	 4
276 	 21
2762 	 10
27622 	 11
276226 	 11
2762265 	 11
27622654 	 11
27623 	 9
276231 	 9
2762312 	 9
27623123 	 9
276231232 	 9
2762312326 	 9
27623123267 	 9
2767 	 20
277 	 3
2775 	 3
27753 	 3
277537 	 3
278 	 12
2787 	 12
27877 	 12
278773 	 12
2787735 	 12
27877351 	 12
278773517 	 12
2787735177 	 12
27877351777 	 12
278773517776 	 12
2787735177768 	 12
27877351777688 	 12
278773517776887 	 12
28 	 6
287 	 22
2877 	 22
28772 	 22
287726 	 22
2877268 	 22
28772687 	 22
288 	 13
29 	 14
3 	 24
36 	 23
367 	 23
37 	 27
373 	 25
3736 	 25
37362 	 25
373624 	 25
3736241 	 25
37362412 	 25
373624123 	 25
3736241232 	 25
37362412326 	 25
373624123267 	 25
376 	 26
3766 	 26
4 	 33
42 	 31
427 	 29
4278 	 29
42783 	 29
427837 	 29
4278378 	 29
428 	 30
4283 	 30
43 	 32
46 	 34
466 	 28
4667 	 28
46673 	 28
466732 	 28
4667323 	 28
46673237 	 28
466732377 	 28
4667323774 	 28
46673237743 	 28
466732377437 	 28
47 	 35
48 	 36
5 	 38
53 	 38
533 	 37
5335 	 37
53357 	 37
538 	 39
5388 	 39
53888 	 39
538882 	 39
5388823 	 39
6 	 41
63 	 40
66 	 42
664 	 43
6646 	 43
66466 	 43
664667 	 43
67 	 44
68 	 45
684 	 45
6843 	 45
68437 	 45
7 	 57
72 	 58
724 	 56
7243 	 56
725 	 59
7252 	 59
72523 	 59
725231 	 59
7252315 	 59
72523153 	 59
725231532 	 59
7252315328 	 59
72523153283 	 59
725231532837 	 59
727 	 47
7277 	 47
72772 	 52
727723 	 52
7277237 	 52
72772377 	 52
727723774 	 52
7277237743 	 52
72772377437 	 52
72776 	 46
727764 	 46
7277647 	 46
72776477 	 46
73 	 48
732 	 48
7327 	 48
75 	 49
758 	 49
7586 	 49
75867 	 49
76 	 50
768 	 50
7682 	 50
76828 	 50
768286 	 50
7682863 	 50
76828637 	 50
77 	 60
778 	 60
7782 	 60
77827 	 60
778274 	 60
78 	 55
786 	 54
7866 	 53
78663 	 53
786637 	 53
7866371 	 53
78663712 	 53
786637123 	 53
7866371232 	 53
78663712326 	 53
786637123267 	 53
7867 	 51
78675 	 51
786754 	 51
7867546 	 51
78675467 	 51
787 	 61
7872 	 61
78729 	 61
787292 	 61
7872923 	 61
78729237 	 61
787292377 	 61
7872923774 	 61
78729237743 	 61
787292377437 	 61
79 	 64
793 	 64
7933 	 64
79333 	 62
793337 	 62
79338 	 63
793382 	 63
7933826 	 63
79338267 	 63
793382676 	 63
8 	 68
84 	 67
842 	 65
8428 	 65
843 	 66
86 	 69
866 	 70
8662 	 70
86628 	 70
866286 	 70
8662863 	 70
86628637 	 70
87 	 72
872 	 72
8724 	 72
87246 	 72
872463 	 72
8724633 	 72
87246331 	 72
872463312 	 71
8724633127 	 71
87246331277 	 71
872463312775 	 71
8724633127753 	 71
87246331277537 	 71
872463317 	 73
8724633175 	 73
87246331758 	 73
872463317586 	 73
8724633175867 	 73
88 	 74
887 	 74
8876 	 74
88764 	 74
887647 	 74
8876477 	 74
9 	 77
92 	 75
927 	 75
94 	 76
948 	 76
9484 	 76
96 	 78
968 	 78

states:
[0, [[2, 1], [3, 85], [4, 101], [5, 124], [6, 134], [7, 146], [8, 228], [9, 264]], -1]
[1, [[2, 2], [3, 13], [5, 20], [6, 33], [7, 43], [8, 76], [9, 84]], 0]
[2, [[2, 3], [7, 8]], 16]
[3, [[2, 4]], 15]
[4, [[2, 5]], 15]
[5, [[4, 6]], 15]
[6, [[3, 7]], 15]
[7, [], 15]
[8, [[7, 9]], 17]
[9, [[6, 10]], 17]
[10, [[8, 11]], 17]
[11, [[7, 12]], 17]
[12, [], 17]
[13, [[3, 14]], 7]
[14, [[8, 15]], 8]
[15, [[7, 16]], 8]
[16, [[6, 17]], 8]
[17, [[6, 18]], 8]
[18, [[8, 19]], 8]
[19, [], 8]
[20, [[4, 21]], 18]
[21, [[6, 22]], 18]
[22, [[2, 23]], 18]
[23, [[4, 24]], 18]
[24, [[6, 25]], 18]
[25, [[4, 26]], 18]
[26, [[1, 27]], 18]
[27, [[2, 28]], 18]
[28, [[3, 29]], 18]
[29, [[2, 30]], 18]
[30, [[6, 31]], 18]
[31, [[7, 32]], 18]
[32, [], 18]
[33, [[3, 34], [8, 35]], 2]
[34, [], 1]
[35, [[7, 36]], 19]
[36, [[4, 37]], 19]
[37, [[3, 38]], 19]
[38, [[8, 39]], 19]
[39, [[8, 40]], 19]
[40, [[3, 41]], 19]
[41, [[7, 42]], 19]
[42, [], 19]
[43, [[3, 44], [6, 45], [7, 59], [8, 63]], 5]
[44, [], 4]
[45, [[2, 46], [7, 58]], 21]
[46, [[2, 47], [3, 51]], 10]
[47, [[6, 48]], 11]
[48, [[5, 49]], 11]
[49, [[4, 50]], 11]
[50, [], 11]
[51, [[1, 52]], 9]
[52, [[2, 53]], 9]
[53, [[3, 54]], 9]
[54, [[2, 55]], 9]
[55, [[6, 56]], 9]
[56, [[7, 57]], 9]
[57, [], 9]
[58, [], 20]
[59, [[5, 60]], 3]
[60, [[3, 61]], 3]
[61, [[7, 62]], 3]
[62, [], 3]
[63, [[7, 64]], 12]
[64, [[7, 65]], 12]
[65, [[3, 66]], 12]
[66, [[5, 67]], 12]
[67, [[1, 68]], 12]
[68, [[7, 69]], 12]
[69, [[7, 70]], 12]
[70, [[7, 71]], 12]
[71, [[6, 72]], 12]
[72, [[8, 73]], 12]
[73, [[8, 74]], 12]
[74, [[7, 75]], 12]
[75, [], 12]
[76, [[7, 77], [8, 83]], 6]
[77, [[7, 78]], 22]
[78, [[2, 79]], 22]
[79, [[6, 80]], 22]
[80, [[8, 81]], 22]
[81, [[7, 82]], 22]
[82, [], 22]
[83, [], 13]
[84, [], 14]
[85, [[6, 86], [7, 88]], 24]
[86, [[7, 87]], 23]
[87, [], 23]
[88, [[3, 89], [6, 99]], 27]
[89, [[6, 90]], 25]
[90, [[2, 91]], 25]
[91, [[4, 92]], 25]
[92, [[1, 93]], 25]
[93, [[2, 94]], 25]
[94, [[3, 95]], 25]
[95, [[2, 96]], 25]
[96, [[6, 97]], 25]
[97, [[7, 98]], 25]
[98, [], 25]
[99, [[6, 100]], 26]
[100, [], 26]
[101, [[2, 102], [3, 110], [6, 111], [7, 122], [8, 123]], 33]
[102, [[7, 103], [8, 108]], 31]
[103, [[8, 104]], 29]
[104, [[3, 105]], 29]
[105, [[7, 106]], 29]
[106, [[8, 107]], 29]
[107, [], 29]
[108, [[3, 109]], 30]
[109, [], 30]
[110, [], 32]
[111, [[6, 112]], 34]
[112, [[7, 113]], 28]
[113, [[3, 114]], 28]
[114, [[2, 115]], 28]
[115, [[3, 116]], 28]
[116, [[7, 117]], 28]
[117, [[7, 118]], 28]
[118, [[4, 119]], 28]
[119, [[3, 120]], 28]
[120, [[7, 121]], 28]
[121, [], 28]
[122, [], 35]
[123, [], 36]
[124, [[3, 125]], 38]
[125, [[3, 126], [8, 129]], 38]
[126, [[5, 127]], 37]
[127, [[7, 128]], 37]
[128, [], 37]
[129, [[8, 130]], 39]
[130, [[8, 131]], 39]
[131, [[2, 132]], 39]
[132, [[3, 133]], 39]
[133, [], 39]
[134, [[3, 135], [6, 136], [7, 141], [8, 142]], 41]
[135, [], 40]
[136, [[4, 137]], 42]
[137, [[6, 138]], 43]
[138, [[6, 139]], 43]
[139, [[7, 140]], 43]
[140, [], 43]
[141, [], 44]
[142, [[4, 143]], 45]
[143, [[3, 144]], 45]
[144, [[7, 145]], 45]
[145, [], 45]
[146, [[2, 147], [3, 173], [5, 176], [6, 180], [7, 187], [8, 192], [9, 218]], 57]
[147, [[4, 148], [5, 150], [7, 160]], 58]
[148, [[3, 149]], 56]
[149, [], 56]
[150, [[2, 151]], 59]
[151, [[3, 152]], 59]
[152, [[1, 153]], 59]
[153, [[5, 154]], 59]
[154, [[3, 155]], 59]
[155, [[2, 156]], 59]
[156, [[8, 157]], 59]
[157, [[3, 158]], 59]
[158, [[7, 159]], 59]
[159, [], 59]
[160, [[7, 161]], 47]
[161, [[2, 162], [6, 169]], 47]
[162, [[3, 163]], 52]
[163, [[7, 164]], 52]
[164, [[7, 165]], 52]
[165, [[4, 166]], 52]
[166, [[3, 167]], 52]
[167, [[7, 168]], 52]
[168, [], 52]
[169, [[4, 170]], 46]
[170, [[7, 171]], 46]
[171, [[7, 172]], 46]
[172, [], 46]
[173, [[2, 174]], 48]
[174, [[7, 175]], 48]
[175, [], 48]
[176, [[8, 177]], 49]
[177, [[6, 178]], 49]
[178, [[7, 179]], 49]
[179, [], 49]
[180, [[8, 181]], 50]
[181, [[2, 182]], 50]
[182, [[8, 183]], 50]
[183, [[6, 184]], 50]
[184, [[3, 185]], 50]
[185, [[7, 186]], 50]
[186, [], 50]
[187, [[8, 188]], 60]
[188, [[2, 189]], 60]
[189, [[7, 190]], 60]
[190, [[4, 191]], 60]
[191, [], 60]
[192, [[6, 193], [7, 208]], 55]
[193, [[6, 194], [7, 203]], 54]
[194, [[3, 195]], 53]
[195, [[7, 196]], 53]
[196, [[1, 197]], 53]
[197, [[2, 198]], 53]
[198, [[3, 199]], 53]
[199, [[2, 200]], 53]
[200, [[6, 201]], 53]
[201, [[7, 202]], 53]
[202, [], 53]
[203, [[5, 204]], 51]
[204, [[4, 205]], 51]
[205, [[6, 206]], 51]
[206, [[7, 207]], 51]
[207, [], 51]
[208, [[2, 209]], 61]
[209, [[9, 210]], 61]
[210, [[2, 211]], 61]
[211, [[3, 212]], 61]
[212, [[7, 213]], 61]
[213, [[7, 214]], 61]
[214, [[4, 215]], 61]
[215, [[3, 216]], 61]
[216, [[7, 217]], 61]
[217, [], 61]
[218, [[3, 219]], 64]
[219, [[3, 220]], 64]
[220, [[3, 221], [8, 223]], 64]
[221, [[7, 222]], 62]
[222, [], 62]
[223, [[2, 224]], 63]
[224, [[6, 225]], 63]
[225, [[7, 226]], 63]
[226, [[6, 227]], 63]
[227, [], 63]
[228, [[4, 229], [6, 233], [7, 240], [8, 258]], 68]
[229, [[2, 230], [3, 232]], 67]
[230, [[8, 231]], 65]
[231, [], 65]
[232, [], 66]
[233, [[6, 234]], 69]
[234, [[2, 235]], 70]
[235, [[8, 236]], 70]
[236, [[6, 237]], 70]
[237, [[3, 238]], 70]
[238, [[7, 239]], 70]
[239, [], 70]
[240, [[2, 241]], 72]
[241, [[4, 242]], 72]
[242, [[6, 243]], 72]
[243, [[3, 244]], 72]
[244, [[3, 245]], 72]
[245, [[1, 246]], 72]
[246, [[2, 247], [7, 253]], 72]
[247, [[7, 248]], 71]
[248, [[7, 249]], 71]
[249, [[5, 250]], 71]
[250, [[3, 251]], 71]
[251, [[7, 252]], 71]
[252, [], 71]
[253, [[5, 254]], 73]
[254, [[8, 255]], 73]
[255, [[6, 256]], 73]
[256, [[7, 257]], 73]
[257, [], 73]
[258, [[7, 259]], 74]
[259, [[6, 260]], 74]
[260, [[4, 261]], 74]
[261, [[7, 262]], 74]
[262, [[7, 263]], 74]
[263, [], 74]
[264, [[2, 265], [4, 267], [6, 270]], 77]
[265, [[7, 266]], 75]
[266, [], 75]
[267, [[8, 268]], 76]
[268, [[4, 269]], 76]
[269, [], 76]
[270, [[8, 271]], 78]
[271, [], 78]
*/

static const uint16_t NUM_STATES = 272;
static const int16_t states[][NUM_STATES] = {
// sugset numds desc(s)[sym/state]....                             ... // index
  {    -1,  8,  2,    1,  3,   85,  4,  101,  5,  124,  6,  134,  7,  146,  8,  228,  9,  264, }, //    0
  {     0,  7,  2,    2,  3,   13,  5,   20,  6,   33,  7,   43,  8,   76,  9,   84, }, //    1
  {    16,  2,  2,    3,  7,    8, },                                  //    2
  {    15,  1,  2,    4, },                                            //    3
  {    15,  1,  2,    5, },                                            //    4
  {    15,  1,  4,    6, },                                            //    5
};
#endif
