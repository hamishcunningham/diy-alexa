// foodflows.h

#ifndef FOODFLOWS_H
#define FOODFLOWS_H
static const uint16_t NUM_WORDS = 25;

class Predictor {
  static const uint16_t MAX_WORD_LEN = 20; // max characters in a word
  uint16_t STATE_SUGGESTIONS = 0; // position of sugset num in state array
  uint16_t STATE_NUM_DESCS = 1;   // position of sugset num in state array
  uint16_t STATE_1ST_DESC = 2;    // position of 1st descendant in state array

  uint16_t state = 0;         // array index of current state (0 is root)
  char history[MAX_WORD_LEN]; // symbols consumed so far
  uint16_t histlen = 0;       // number of symbols in history
  uint16_t sugiter = 1;       // array index for suggestion set iterator
public:
  Predictor();
  void print();
  void reset();
  int16_t suggest(uint8_t symbolSeen);
  const char *next();
  const char *first();
  uint16_t getState();
};

static const char *words[] = {  // in order of frequency
  "the",               //    0
  "of",                //    1
  "to",                //    2
  "a",                 //    3
  "and",               //    4
  "in",                //    5
  "is",                //    6
  "that",              //    7
  "for",               //    8
  "it",                //    9
  "on",                //   10
  "with",              //   11
  "was",               //   12
  "as",                //   13
  "be",                //   14
  "at",                //   15
  "by",                //   16
  "he",                //   17
  "i",                 //   18
  "said",              //   19
  "are",               //   20
  "from",              //   21
  "but",               //   22
  "have",              //   23
  "you",               //   24
};

static const uint16_t NUM_SUGGS = 30;
static const uint16_t suggestionSets[][NUM_SUGGS] = {
//arity wordnum(s)...                     index: symseq(s)...
  {  8,  3, 4, 13, 14, 15, 16, 20, 22, }, //    0: 2
  {  1,  4, },                          //    1: 26 263
  {  1,  20, },                         //    2: 273
  {  2,  13, 20, },                     //    3: 27
  {  2,  15, 22, },                     //    4: 28
  {  1,  14, },                         //    5: 23
  {  1,  22, },                         //    6: 288
  {  1,  16, },                         //    7: 29
  {  1,  8, },                          //    8: 36 367
  {  2,  8, 21, },                      //    9: 3
  {  1,  21, },                         //   10: 37 376 3766
  {  1,  23, },                         //   11: 42 428 4283
  {  1,  17, },                         //   12: 43
  {  6,  18, 5, 6, 9, 17, 23, },        //   13: 4
  {  1,  5, },                          //   14: 46
  {  1,  6, },                          //   15: 47
  {  1,  9, },                          //   16: 48
  {  1,  1, },                          //   17: 63
  {  2,  1, 10, },                      //   18: 6
  {  1,  10, },                         //   19: 66
  {  1,  19, },                         //   20: 7 72 724 7243
  {  1,  7, },                          //   21: 842 8428
  {  1,  0, },                          //   22: 843
  {  2,  0, 7, },                       //   23: 84
  {  3,  0, 2, 7, },                    //   24: 8
  {  1,  2, },                          //   25: 86
  {  1,  12, },                         //   26: 92 927
  {  1,  11, },                         //   27: 94 948 9484
  {  3,  11, 12, 24, },                 //   28: 9
  {  1,  24, },                         //   29: 96 968
};

/*
candidates:
[['2', ['a', 'and', 'as', 'be', 'at', 'by', 'are', 'but']],
 ['23', ['be']],
 ['26', ['and']],
 ['263', ['and']],
 ['27', ['as', 'are']],
 ['273', ['are']],
 ['28', ['at', 'but']],
 ['288', ['but']],
 ['29', ['by']],
 ['3', ['for', 'from']],
 ['36', ['for']],
 ['367', ['for']],
 ['37', ['from']],
 ['376', ['from']],
 ['3766', ['from']],
 ['4', ['i', 'in', 'is', 'it', 'he', 'have']],
 ['42', ['have']],
 ['428', ['have']],
 ['4283', ['have']],
 ['43', ['he']],
 ['46', ['in']],
 ['47', ['is']],
 ['48', ['it']],
 ['6', ['of', 'on']],
 ['63', ['of']],
 ['66', ['on']],
 ['7', ['said']],
 ['72', ['said']],
 ['724', ['said']],
 ['7243', ['said']],
 ['8', ['the', 'to', 'that']],
 ['84', ['the', 'that']],
 ['842', ['that']],
 ['8428', ['that']],
 ['843', ['the']],
 ['86', ['to']],
 ['9', ['with', 'was', 'you']],
 ['92', ['was']],
 ['927', ['was']],
 ['94', ['with']],
 ['948', ['with']],
 ['9484', ['with']],
 ['96', ['you']],
 ['968', ['you']]]

input sym sequences to suggestion sets:
2 	 0
23 	 5
26 	 1
263 	 1
27 	 3
273 	 2
28 	 4
288 	 6
29 	 7
3 	 9
36 	 8
367 	 8
37 	 10
376 	 10
3766 	 10
4 	 13
42 	 11
428 	 11
4283 	 11
43 	 12
46 	 14
47 	 15
48 	 16
6 	 18
63 	 17
66 	 19
7 	 20
72 	 20
724 	 20
7243 	 20
8 	 24
84 	 23
842 	 21
8428 	 21
843 	 22
86 	 25
9 	 28
92 	 26
927 	 26
94 	 27
948 	 27
9484 	 27
96 	 29
968 	 29

states:
[0, [[2, 1], [3, 10], [4, 16], [6, 24], [7, 27], [8, 31], [9, 37]], -1]
[1, [[3, 2], [6, 3], [7, 5], [8, 7], [9, 9]], 0]
[2, [], 5]
[3, [[3, 4]], 1]
[4, [], 1]
[5, [[3, 6]], 3]
[6, [], 2]
[7, [[8, 8]], 4]
[8, [], 6]
[9, [], 7]
[10, [[6, 11], [7, 13]], 9]
[11, [[7, 12]], 8]
[12, [], 8]
[13, [[6, 14]], 10]
[14, [[6, 15]], 10]
[15, [], 10]
[16, [[2, 17], [3, 20], [6, 21], [7, 22], [8, 23]], 13]
[17, [[8, 18]], 11]
[18, [[3, 19]], 11]
[19, [], 11]
[20, [], 12]
[21, [], 14]
[22, [], 15]
[23, [], 16]
[24, [[3, 25], [6, 26]], 18]
[25, [], 17]
[26, [], 19]
[27, [[2, 28]], 20]
[28, [[4, 29]], 20]
[29, [[3, 30]], 20]
[30, [], 20]
[31, [[4, 32], [6, 36]], 24]
[32, [[2, 33], [3, 35]], 23]
[33, [[8, 34]], 21]
[34, [], 21]
[35, [], 22]
[36, [], 25]
[37, [[2, 38], [4, 40], [6, 43]], 28]
[38, [[7, 39]], 26]
[39, [], 26]
[40, [[8, 41]], 27]
[41, [[4, 42]], 27]
[42, [], 27]
[43, [[8, 44]], 29]
[44, [], 29]
*/

static const uint16_t NUM_STATES = 45;
static const int16_t states[][NUM_STATES] = {
// sugset numds desc(s)[sym/state]....                             ... // index
  {    -1,  7,  2,    1,  3,   10,  4,   16,  6,   24,  7,   27,  8,   31,  9,   37, }, //    0
  {     0,  5,  3,    2,  6,    3,  7,    5,  8,    7,  9,    9, },    //    1
  {     5,  0, },                                                      //    2
  {     1,  1,  3,    4, },                                            //    3
  {     1,  0, },                                                      //    4
  {     3,  1,  3,    6, },                                            //    5
  {     2,  0, },                                                      //    6
  {     4,  1,  8,    8, },                                            //    7
  {     6,  0, },                                                      //    8
  {     7,  0, },                                                      //    9
// sugset numds desc(s)[sym/state]....                             ... // index
  {     9,  2,  6,   11,  7,   13, },                                  //   10
  {     8,  1,  7,   12, },                                            //   11
  {     8,  0, },                                                      //   12
  {    10,  1,  6,   14, },                                            //   13
  {    10,  1,  6,   15, },                                            //   14
  {    10,  0, },                                                      //   15
  {    13,  5,  2,   17,  3,   20,  6,   21,  7,   22,  8,   23, },    //   16
  {    11,  1,  8,   18, },                                            //   17
  {    11,  1,  3,   19, },                                            //   18
  {    11,  0, },                                                      //   19
// sugset numds desc(s)[sym/state]....                             ... // index
  {    12,  0, },                                                      //   20
  {    14,  0, },                                                      //   21
  {    15,  0, },                                                      //   22
  {    16,  0, },                                                      //   23
  {    18,  2,  3,   25,  6,   26, },                                  //   24
  {    17,  0, },                                                      //   25
  {    19,  0, },                                                      //   26
  {    20,  1,  2,   28, },                                            //   27
  {    20,  1,  4,   29, },                                            //   28
  {    20,  1,  3,   30, },                                            //   29
// sugset numds desc(s)[sym/state]....                             ... // index
  {    20,  0, },                                                      //   30
  {    24,  2,  4,   32,  6,   36, },                                  //   31
  {    23,  2,  2,   33,  3,   35, },                                  //   32
  {    21,  1,  8,   34, },                                            //   33
  {    21,  0, },                                                      //   34
  {    22,  0, },                                                      //   35
  {    25,  0, },                                                      //   36
  {    28,  3,  2,   38,  4,   40,  6,   43, },                        //   37
  {    26,  1,  7,   39, },                                            //   38
  {    26,  0, },                                                      //   39
// sugset numds desc(s)[sym/state]....                             ... // index
  {    27,  1,  8,   41, },                                            //   40
  {    27,  1,  4,   42, },                                            //   41
  {    27,  0, },                                                      //   42
  {    29,  1,  8,   44, },                                            //   43
  {    29,  0, },                                                      //   44
};
#endif
